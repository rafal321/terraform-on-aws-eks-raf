---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rk-ing-v1
  namespace: monitoring
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: rk-ing-v1
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /api/health   # for grafana only
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200-299'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/target-type: ip
    # SSL
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    # Ingress Groups
    alb.ingress.kubernetes.io/group.name: rk.ing.group
    alb.ingress.kubernetes.io/group.order: '98'
spec:
  rules:  
    - host: grafana.ops.perf.openjawhosting.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-grafana
                port: 
                  number: 80
    - host: prometheus.ops.perf.openjawhosting.com       # https://prometheus.ops.perf.openjawhosting.com/graph
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-prometheus
                port: 
                  number: 9090
# Grafana Dasboards
# https://grafana.com/grafana/dashboards/
