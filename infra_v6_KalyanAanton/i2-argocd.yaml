---
global:
  image:
    tag: "v2.6.6"

server:
  extraArgs:
    - --insecure
# we dont want argo to generate cert and redirect
# we should use LB if we want to expose it with ingress


# Example ingress -------------------------------------------------------------------------------------------------------------

# Annotations Reference: https://kubernetes-sigs.github.io/aws-load-balancer-controller/latest/guide/ingress/annotations/
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argo-lb2-ing
#   namespace: argocd
#   annotations:
#     # Load Balancer Name
#     alb.ingress.kubernetes.io/load-balancer-name: argo-lb2-ing
#     # Ingress Core Settings
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-path: /healthz    # argo health
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200-299'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/target-type: ip
#     # SSL
#     alb.ingress.kubernetes.io/ssl-redirect: '443'   # SSL Redirect Setting
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:11111111111111:certificate/d1e374c5-4c94-4be2-8c54-da5a3ce3f37f
#     external-dns.alpha.kubernetes.io/hostname: argocd.ops.perf.hosting.com
# spec:
#   defaultBackend:
#     service:
#       name: argocd-server
#       port:
#         number: 80
#   rules:
#     - http:
#         paths:
#           - path: /app1
#             pathType: Prefix
#             backend:
#               service:
#                 name: app1-nginx-nodeport-service
#                 port:
#                   number: 80
#     - host: argocd22.ops.perf.hosting.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: argocd-server
#                 port: 
#                   number: 80


# # kubectl get secret/argocd-initial-admin-secret -oyaml | grep password | awk '{print $NF}' | base64 -d
# # kubectl get secret/argocd-initial-admin-secret -oyaml | awk '/password/ {print $NF}' | base64 -d